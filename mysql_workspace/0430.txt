SQL> -- 현재 유저가 보유한 테이블을 보고 싶은 경우
SQL> -- mysql인 경우 show tables 명령이지만, 오라클은 복잡
SQL> -- oracle은 시스템의 정보를 얻기 위해서는 사전이라 불리는
SQL> -- 즉 dictionary를 조회할 줄 알아야함
SQL> -- 수백개의 딕셔너리를 개발자가 암기해야하나?
SQL> -- BUT! 딕셔너리의 어느정도 규칙이 있음
SQL> -- 명명규칙 -> 현재 접속한 사용자의 계정이 일반 계정인 경우 접두어가
SQL> -- user_ 로 시작, 그리고 현재 접속한 계정이 관리자인 경우
SQL> -- SYS, SYSTEM 등 인경우 dba_ 로 시작, v$_ 접두어로 시작
SQL> SELECT TABLE_NAME FROM user_tables;

TABLE_NAME                                                                      
------------------------------------------------------------                    
MEMBERSHIP                                                                      
MEMBER                                                                          

SQL> -- DDL 중 제거하는 명령어는 DROP -> DELETE vs DROP
SQL> DROP TABLE membership;

Table dropped.

SQL> DROP TABLE member;

Table dropped.

SQL> COMMIT;

Commit complete.

SQL> -- 앞으로 테이블 만들때는 까다롭게 컬럼에 제한을 가하자
SQL> -- 제약조건을 부여하자
SQL> -- 레코드는 유일한 것만 받아들이겠다 UNIQUE
SQL> -- NULL을 허용하지 않겠다 NOT NULL
SQL> -- 지정된 값만 허용하겠다 CHECK
SQL> -- 아무런 값을 넣지않으면 기본으로 값을 자동지정하겠다 DEFAULT
SQL> -- 위의 모든 제약 조건을 부여해서 테이블 실습
SQL> CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  ,NAME VARCHAR2(30) NOT NULL
  4  ,GENDER VARCHAR(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  ,CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7  );

Table created.

SQL> -- 제약조건이 동작하는지 테스트 하자
SQL> INSERT INTO MEMBER (ID, GENDER) VALUES ('ADAMS', '남');
INSERT INTO MEMBER (ID, GENDER) VALUES ('ADAMS', '남')
*
ERROR at line 1:
ORA-01400: cannot insert NULL into ("JS"."MEMBER"."NAME") 


SQL> -- NOT NULL 위반
SQL> INSERT INTO MEMBER (ID, NAME, GENDER) VALUES ('ADAMS', 'A', 'S');
INSERT INTO MEMBER (ID, NAME, GENDER) VALUES ('ADAMS', 'A', 'S')
*
ERROR at line 1:
ORA-02290: check constraint (JS.CHK_MEMBER) violated 


SQL> -- GENDER의 CHECK 조건 위반
SQL> SPOOL OFF
