/*
	Java 에서는 비슷한 자료형 간에는 서로 형변환이 가능하다.
*/
class DataType2 
{
	public static void main(String[] args) 
	{
		/*
		문자 : char 한 문자
		숫자 : 정수 byte < short < int < long
						1			2			4		8
				실수 float double
						4		8
		논리값 : boolean 1 (자바에서는 true1, false0 아니다)
		*/
		byte b = 5;
		short s = 7;
		byte x = 8;
		
		b = x; // 대입 연산 뿐만 아니라, 일반적으로 연산자가 동작하기 위해서는
				  // 연산대상이 되는 피연산자는 자료형이 동일해야함
		s = b; // 이 코드는 연산 대상이 되는 피연산자들이 동일하지 않기 때문에
				  // java 컴파일러가 자료형을 동일하게 변환시킨다.
				  // 즉 개발자가 처리한 것이 아니라, 컴파일러에 의한 형변환을 자동 형변환이라 한다.
				  // 1. 같은 종류의 자료형
				  // 2. 작은 것을 큰 자료형에 대입하고 있으므로, 데이터 손실 발생X
		b = (byte)s;
					// 강제형변환 : 개발자가 데이터 손실을 감안해서라도, 원하는 종류의 자료형을 변환하는 것
					// 이때 사용되는 (소괄호)를 cast 연산자라 한다.
					// 주의! 형변환이란 언제나 같은 종류끼리 지원
		char c = 'B'; // 컴파일 타임에, java 컴파일러가 유니코드를 찾음
		char d = '한'; // 컴파일 타임에, java 컴파일러가 유니코드를 찾음
		char k = 96; // 유니코드 입력한 것이라고 봄
//		char m = -30; // char형은 사실상 숫자형은 맞으나, 여기 담을 수 있는 수는 아스키 포함 유니코드를 담디위한 용도.
							  // 키코드 체계에서는 음수를 지원하지 않기 때문에 에러 발생
		
		s = (short)k;
		
		System.out.println("Hello World!");
	}
}